// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Server.Migrations
{
    [DbContext(typeof(SkolaSportaContext))]
    partial class SkolaSportaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Dete", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Godine")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JMBG")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RoditeljID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoditeljID");

                    b.ToTable("Dete");
                });

            modelBuilder.Entity("Models.Roditelj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Roditelj");
                });

            modelBuilder.Entity("Models.SkolaSporta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Broj")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("SkolaSporta");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUpisa")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeteID")
                        .HasColumnType("int");

                    b.Property<int?>("SportID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeteID");

                    b.HasIndex("SportID");

                    b.ToTable("Spoj");
                });

            modelBuilder.Entity("Models.Sport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("MaxBrojDece")
                        .HasColumnType("int");

                    b.Property<int?>("SkolaSportaID")
                        .HasColumnType("int");

                    b.Property<int>("TrenBrojDece")
                        .HasColumnType("int");

                    b.Property<string>("Vrsta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("SkolaSportaID");

                    b.ToTable("Sport");
                });

            modelBuilder.Entity("Models.Dete", b =>
                {
                    b.HasOne("Models.Roditelj", "Roditelj")
                        .WithMany("Dete")
                        .HasForeignKey("RoditeljID");

                    b.Navigation("Roditelj");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.HasOne("Models.Dete", "Dete")
                        .WithMany("SportDete")
                        .HasForeignKey("DeteID");

                    b.HasOne("Models.Sport", "Sport")
                        .WithMany("DeteSport")
                        .HasForeignKey("SportID");

                    b.Navigation("Dete");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("Models.Sport", b =>
                {
                    b.HasOne("Models.SkolaSporta", "SkolaSporta")
                        .WithMany("sportovi")
                        .HasForeignKey("SkolaSportaID");

                    b.Navigation("SkolaSporta");
                });

            modelBuilder.Entity("Models.Dete", b =>
                {
                    b.Navigation("SportDete");
                });

            modelBuilder.Entity("Models.Roditelj", b =>
                {
                    b.Navigation("Dete");
                });

            modelBuilder.Entity("Models.SkolaSporta", b =>
                {
                    b.Navigation("sportovi");
                });

            modelBuilder.Entity("Models.Sport", b =>
                {
                    b.Navigation("DeteSport");
                });
#pragma warning restore 612, 618
        }
    }
}
